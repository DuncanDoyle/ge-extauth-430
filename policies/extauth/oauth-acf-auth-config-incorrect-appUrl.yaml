apiVersion: enterprise.gloo.solo.io/v1
kind: AuthConfig
metadata:
  name: oauth-acf-auth
  namespace: gloo-system
spec:
  configs:
    - oauth2:
        oidcAuthorizationCode:
          issuerUrl: http://keycloak.example.com/realms/master/
          # TBH, I don't think there is much we can do here in ExtAuth logging, as this is simply used to created the redirect URL
          # when redirecting to IdP (for the IdP to redirect the browser to the application after receiving the access_code).
          # So I guess either the IdP will barf that the redirect_uri is not valid, or the browser will barf that it can't access the
          # URL when it's redirected.
          # appUrl: http://api.example.com
          appUrl: http://api.example.co
          callbackPath: /callback
          clientId: webapp-client
          clientSecretRef:
            name: oauth
            namespace: gloo-system
          session:
            cookie:
              allowRefreshing: true
            # Needed since we run on http instead of https in this demo. Without this, we'll end up in a redirect loop as no cookies are set on the client ...
            cookieOptions:
              notSecure: true
            # Store the id_token and access_token in Redis, and only sent session ID back to the client.
            # failOnFetchFailure: true
            # redis:
            #   cookieName: keycloak-session
            #   options:
            #     host: redis.gloo-system.svc.cluster.local:6379
          scopes:
            - email
          # Restore the JWT in the header we're sending to Upstream.
          # This allows us to send the identity-token JWT in a header to Upstream, without needing to set the headers on the client (i.e. we only store the session-id on the client).
          headers:
            idTokenHeader: jwt